import java.util.Scanner;

class AsciiShop{

	public static void main(String[] args)
	{
		Scanner scFile = new Scanner(System.in);
		AsciiImage ai = new AsciiImage();

		while (scFile.hasNext())
		{
			ai.addLine(scFile.nextLine());
		}

		String aC = ai.getActionCommand();

		if(aC.contains("unique"))
		{
			System.out.println(ai.getUniqueChars());
			System.out.println(ai.toString());
			System.out.println(ai.getWidth()+" "+ai.getHeight());
		}
		else if(aC.contains("transpose"))
		{
			ai.transpose();
			System.out.println(ai.getHeight()+" "+ai.getWidth());
		}
		else if(aC.contains("flip-v"))
		{
			ai.flipV();
			System.out.println(ai.getWidth()+" "+ai.getHeight());
		}
		else
		{
			System.out.println("INPUT MISMATCH");
		}


	}
}

class AsciiImage
{
	private String[] lineArray = new String[1000];
	private int width;
	private int height;
	private int hCount = 0;
	int readCommand = 0;
	String action = "";

	public AsciiImage()
	{
		this.width = 0;
		this.height = 0;
	}

	public String getActionCommand()
	{
		return action;
	}

	public boolean addLine(String line)
	{

		if(height == 1 && line.length() < 1)
		{
			return false;
		}
		else
		{
			if(hCount==0)
			{
				String parts[] = line.split(" ");
				readCommand = Integer.parseInt(parts[1]);

			}
			else if(hCount==1)
			{
				width = line.length();
				lineArray[height] = line;
				height++;
			}
			else if(hCount >= 2 && line.length() != width)
			{
				action = line;
				height = readCommand;
			}
			else if (hCount >= 3)
			{
				lineArray[height] = line;
				height++;
			}
			else if (height>readCommand)
			{
				return false;
			}
			hCount++;
			return true;
		}
	}


	public int getWidth()
	{
		return width;
	}

	public int getHeight()
	{
		return height;
	}

	public String toString()
	{
		String line = "";
		for(int i = 0; i<=height-2; i++)
		{
			if(i==height-2)
				line += lineArray[i];
			else	
				line += lineArray[i]+"\n";
		}
		return line;
	}

	public int getUniqueChars()
	{

		int uniqueChars = 0;
		String buffer = "";
		for(int i = 1; i<height; i++)
		{
			if(lineArray[i]!=null)
			{
				for (int j = 0; j < width; j++) {
					if (!buffer.contains(String.valueOf(lineArray[i].charAt(j)))) {
						buffer += lineArray[i].charAt(j);
						uniqueChars++;
					}

				}

			}
		}
		return uniqueChars;
	}

	public void flipV()
	{
		for(int i = getHeight()-2; i >= 0; i--)
		{
			for(int j = 0; j < getWidth(); j++)
			{
				System.out.print(lineArray[i].charAt(j));
			}
			System.out.println("");
		}
	}

	public void transpose()              
	{
		char a[][] = new char[getHeight()][getWidth()];
		
		for(int i = 0; i < getHeight()-2; i++)
		{
			for(int j = 0; j < getWidth(); j++)
			{
				a[i][j] = lineArray[i].charAt(j);
			}
		}
		
		
			
		for(int i = 0; i < getWidth(); i++)
		{
			for(int j = 0; j < getHeight()-2; j++)
			{
				System.out.print(a[j][i]);
			}
			System.out.println("");
		}
		
	}

	public void fill(int x, int y, char c)
	{

	}
}
